################################################################################
# VORON CONFIG MOD
# Copyright 2020 Frederik Wolter
# https://github.com/rampage128/voron-klipper

# MOTION COMPONENT
# Provides macros for gantry motion to specific places

# All motion is calculated from the maximum dimensions of the printer. That 
# means it is not necessary to provide any positions and this should work with 
# any printer that homes x|y to max and z to 0.
################################################################################


################################################################################
# CENTER TOOLHEAD
# Moves the toolhead to the center of the printer. 
################################################################################
[gcode_macro CENTER_XY]
gcode:
    {% if printer["gcode_macro VORON_CONFIG"] is defined and printer["gcode_macro VORON_CONFIG"].motion_speed is defined %}
        # get max positions
        {% set xM = printer.configfile.config["stepper_x"]["position_max"]|float %}
        {% set yM = printer.configfile.config["stepper_y"]["position_max"]|float %}
        # get motion configuration
        {% set speed = printer["gcode_macro VORON_CONFIG"].motion_speed|float * 60 %}
        
        G1 X{xM / 2} Y{yM / 2} F{speed}
    {% else %}
        { action_raise_error("Can not center your printer.\n"
                              "Please make sure you have defined variable_motion_speed in your VORON_CONFIG!") }
    {% endif %}


################################################################################
# PARKING MODE
# Parks the printer in some "out of way" position. 

# Current options:
# - hop: distance the Z axis should move up before parking in mm
# - X: The X coordinate to park at. If not specified, it will use the current.
################################################################################
[gcode_macro PARK]
default_parameter_HOP=0
gcode:
    {% if printer["gcode_macro VORON_CONFIG"] is defined and printer["gcode_macro VORON_CONFIG"].motion_speed is defined %}
        # get max positions
        {% set xM = printer.configfile.config["stepper_x"]["position_max"]|float %}
        {% set yM = printer.configfile.config["stepper_y"]["position_max"]|float %}
        # get motion configuration
        {% set speed = printer["gcode_macro VORON_CONFIG"].motion_speed|float * 60 %}

        # initialize default X position
        {% set finalX = -1 %}

        # Apply user defined x, if provided
        {% if "X" in params %}
            {% set finalX = params.X|float %}
        {% endif %}

        # fix any user defined x that is out of bounds
        {% if finalX > xM %}
            {% set finalX = xM %}
        {% endif %}

        FEEDBACK MSG="Parking toolhead..."

        # home if neccesary
        HOME OPTIONAL=true

        SAVE_GCODE_STATE NAME=PARK

        # hop up a bit unless told otherwise
        {% if params.HOP > 0 %}
            G91 
            G0 Z{params.HOP} F1800
            G90
        {% endif %}

        # park toolhead if user X is not defined, we keep x as is
        {% if finalX < 0 %}
            G0 Y{yM} F{speed}
        {% else %}
            G0 X{finalX} Y{yM} F{speed}
        {% endif %}

        # notify we are done and clear display
        FEEDBACK MSG="Toolhead parked"
        UPDATE_DELAYED_GCODE ID=clear_display DURATION=20

        RESTORE_GCODE_STATE NAME=PARK
    {% else %}
        { action_raise_error("Can not service your printer.\n"
                              "Please make sure you have defined variable_motion_speed in your VORON_CONFIG!") }
    {% endif %}
    

################################################################################
# CLEAN NOZZLE
# Will perform a cleaning routine on a brush. 
# You can input the position and orientation of the brush as well as the amount 
# of cleaning strokes.

# Current options:
# - x: X coordinate of the brush
# - y: Y coordinate of the brush
# - z: Z coordinate of the brush (should be slightly below the end of the hairs)
# - l: Length of the brush in mm
# - o: Orientation of the brush (either X or Y)
# - strokes: Number of strokes to perform
################################################################################

[gcode_macro CLEAN_NOZZLE]
default_parameter_STROKES: 5
gcode:
    CHECK_VORON_CONFIG
    {% if printer["gcode_macro VORON_CONFIG"] is defined and printer["gcode_macro VORON_CONFIG"].brush_active == "true" %}
        {% set posX = printer["gcode_macro VORON_CONFIG"].brush_x|float %}
        {% set posY = printer["gcode_macro VORON_CONFIG"].brush_y|float %}
        {% set posZ = printer["gcode_macro VORON_CONFIG"].brush_z|float %}
        {% set posZClear = printer["gcode_macro VORON_CONFIG"].motion_low_z|float %}
        {% set speed = printer["gcode_macro VORON_CONFIG"].motion_speed|float * 60 %}
        {% set length = printer["gcode_macro VORON_CONFIG"].brush_width|float %}
        {% set numStrokes = printer["gcode_macro VORON_CONFIG"].brush_strokes|int %}
        {% set feedRate = length * 120 %}

        {% set startX = posX %}
        {% set startY = posY %}
        {% set endX = posX %}
        {% set endY = posY %}

        {% if printer["gcode_macro VORON_CONFIG"].brush_orientation == "y" %}
            {% set startY = posY - length / 2 %}
            {% set endY = posY + length / 2 %}
        {% else %}
            {% set startX = posX - length / 2 %}
            {% set endX = posX + length / 2 %}
        {% endif %}

        FEEDBACK MSG="Clean: Homing"
        HOME OPTIONAL=true

        SAVE_GCODE_STATE NAME=NOZZLE_CLEAN

        FEEDBACK MSG="Clean: Moving"
        G90
        G0 Z{posZClear}
        G0 X{startX} Y{startY} F{speed}
        G0 Z{posZ}
        FEEDBACK MSG="Clean: Cleaning"
        {% for stroke in range(0, numStrokes) %}
            G0 X{endX} Y{endY} F{feedRate}
            G0 X{startX} Y{startY} F{feedRate}
        {% endfor %}
        G0 Z{posZClear}

        FEEDBACK MSG="Clean: Done"
        UPDATE_DELAYED_GCODE ID=clear_display DURATION=10

        RESTORE_GCODE_STATE NAME=NOZZLE_CLEAN
    {% endif %}
    

################################################################################
# SERVICE MODE
# Allows to move the printer gantry for accessibility of various printer parts. 
# Specify a TYPE to move to one of the predefined positions.

# Current options:
# - bed: easy access to the print bed
# - extruder: easy access to swap filament
# - nozzle: access to the bottom of the toolhead
# - tool: easy access to the toolhead
# - z: balanced access to the z-belt components
################################################################################

[gcode_macro SERVICE]
default_parameter_TYPE: z
gcode:
    {% if printer["gcode_macro VORON_CONFIG"] is defined and printer["gcode_macro VORON_CONFIG"].motion_speed is defined %}
        # get max positions
        {% set xM = printer.configfile.config["stepper_x"]["position_max"]|float %}
        {% set yM = printer.configfile.config["stepper_y"]["position_max"]|float %}
        {% set zM = printer.configfile.config["stepper_z"]["position_max"]|float %}
        # get motion configuration
        {% set speed = printer["gcode_macro VORON_CONFIG"].motion_speed|float * 60 %}

        # initialize default service position
        {% set x = (xM / 2)|int %}
        {% set y = (yM / 2)|int %}
        {% set z = (zM / 2)|int %}
        {% set accepted = (zM / 2)|int %}

        {% if params.TYPE == "bed" %}
            # position to access bed
            {% set x = xM|int %}
            {% set z = (zM / 8 * 7)|int %}
        {% elif params.TYPE == "extruder" %}
            # position to access extruder/filament
            {% set y = (yM / 8)|int %}
            {% set z = (zM / 8 * 2)|int %}
        {% elif params.TYPE == "nozzle" %}
            # position to access nozzle
            {% set y = (yM / 8)|int %}
            {% set z = (zM / 8 * 6)|int %}
        {% elif params.TYPE == "tool" %}
            # position to access tool
            {% set y = (yM / 8)|int %}
        {% elif params.TYPE == "z" %}
            # position to access z-belts
            # Nothing to do here, default values will work
        {% else %}
            { action_raise_error(
                "Service: Error\n"
                "Illegal option: '%.1s'\n"
                "Please specify what to service:\n"
                "- bed: easy access to the print bed\n"
                "- extruder: easy access to swap filament\n"
                "- nozzle: access to the bottom of the toolhead\n"
                "- tool: easy access to the toolhead\n"
                "- z: balanced access to the z-belt components" % (params.TYPE)) }
        {% endif %}

        # Home printer if neccesary
        FEEDBACK MSG="Service: Homing"
        HOME OPTIONAL=true     

        SAVE_GCODE_STATE NAME=SERVICE
        
        # move to service position
        FEEDBACK MSG="Service: Moving"
        G90
        G0 X{x} Y{y} Z{z} F{speed}

        # notify we are done and clear display
        FEEDBACK MSG="Service: Ready"
        UPDATE_DELAYED_GCODE ID=clear_display DURATION=20

        RESTORE_GCODE_STATE NAME=SERVICE
    {% else %}
        { action_raise_error("Can not service your printer.\n"
                              "Please make sure you have defined variable_motion_speed in your VORON_CONFIG!") }
    {% endif %}